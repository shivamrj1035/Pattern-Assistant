SOURCE CODE FOR Diamond::
        System.out.println("Enter rows:");
        int rows=sc.nextInt();
        sc.nextLine();
        System.out.println("Enter character you Want print: ");
        String take=sc.nextLine();
        int spaces = rows - 1;
        int stars = 1;
        
        // Print upper half of the diamond
        for (int i = 1; i <= rows; i++) {
            // Print spaces
            for (int j = 1; j <= spaces; j++) {
                System.out.print(" ");
            }
            
            // Print characters
            for (int k = 1; k <= stars; k++) {
                System.out.print(take);
            }
            
            // Move to next line
            System.out.println();
            
            // Update spaces and stars for the next row
            spaces--;
            stars += 2;
        }
        
        spaces = 1;
        stars = rows * 2 - 3;
        
        // Print lower half of the diamond
        for (int i = 1; i <= rows - 1; i++) {
            // Print spaces
            for (int j = 1; j <= spaces; j++) {
                System.out.print(" ");
            }
            
            // Print characters
            for (int k = 1; k <= stars; k++) {
                System.out.print(take);
            }
            
            // Move to next line
            System.out.println();
            
            // Update spaces and stars for the next row
            spaces++;
            stars -= 2;
        }
        

Explaination::
In this code, the user is prompted to enter the number of rows and the character they want to use. The program then calculates the number of spaces and characters to print on each row, based on the row number.

The program first prints the upper half of the diamond, then the lower half. The number of spaces and characters to print are updated for each row using two separate loops.
